{"version":3,"file":"static/js/498.a1d6e016.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.js","components/ContactList/ContactList.js","views/PhonebookView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactForm_input__xV1XM\",\"button\":\"ContactForm_button__q+NdL\"};","import React, { useState } from 'react';\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'redux/contactsSlice';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const formSubmitHandler = () => {\n    if (contacts) {\n      const sameName = contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n      if (sameName) {\n        alert(`${name} is already in contacts`);\n        reset();\n        return;\n      }\n    }\n    addContact({ name, number });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    formSubmitHandler();\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"nameInput\">\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id=\"nameInput\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"numberInput\">\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id=\"numberInput\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__nzymj\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from 'redux/filterSlice';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(updateFilter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ListItem_item__mucwb\",\"button\":\"ListItem_button__5TIDN\",\"text\":\"ListItem_text__ZTLcl\"};","import React from 'react';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport PropTypes from 'prop-types';\nimport s from './ListItem.module.css';\n\nconst ListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <li className={s.item}>\n      <p className={s.text}>\n        {name}: {number}\n      </p>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </button>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { useFetchContactsQuery } from 'redux/contactsSlice';\nimport { useSelector } from 'react-redux';\nimport ListItem from 'components/ListItem/ListItem';\n\nconst ContactList = () => {\n  const { data: contacts, isSuccess } = useFetchContactsQuery();\n  const filter = useSelector(state => state.filter.filter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n    return [];\n  };\n  if (isSuccess) {\n    return (\n      <ul>\n        {getVisibleContacts().map(({ id, name, number }) => (\n          <ListItem key={id} number={number} name={name} id={id} />\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst s = {\n  container: {\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 300,\n    fontSize: 15,\n    textAlign: 'center',\n    backgroundColor: 'rgb(205, 247, 222)',\n    paddingBottom: 10,\n  },\n  title: {\n    marginBottom: 10,\n    paddingTop: 10,\n  },\n};\n\nconst PhonebookView = () => (\n  <div style={s.container}>\n    <h1 style={s.title}>Phonebook</h1>\n    <ContactForm />\n\n    <h2 style={s.title}>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </div>\n);\n\nexport default PhonebookView;\n"],"names":["ContactForm","contacts","useFetchContactsQuery","data","useAddContactMutation","addContact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","contact","toLowerCase","alert","formSubmitHandler","htmlFor","className","s","type","onChange","id","pattern","title","required","dispatch","useDispatch","filter","useSelector","state","updateFilter","useDeleteContactMutation","deleteContact","isDeleting","isLoading","onClick","isSuccess","normalizedFilter","includes","getVisibleContacts","map","container","marginTop","marginBottom","marginLeft","marginRight","width","fontSize","textAlign","backgroundColor","paddingBottom","paddingTop","style"],"sourceRoot":""}